name: Convert Modules Simply

on:
  schedule:
    - cron: '0 0 * * *' # 每天执行一次
  workflow_dispatch: # 手动触发

jobs:
  update-snippet:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download snippets
      run: |
        mkdir -p Original/ZenmoFeiShi Original/ddgksf2013 Original/RuCu6
        curl -L -o Original/ZenmoFeiShi/Pinduoduo.snippet https://github.com/ZenmoFeiShi/Qx/raw/main/Pinduoduo.snippet
        curl -L -o Original/ddgksf2013/SmzdmAds.conf https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/SmzdmAds.conf
        curl -L -o Original/ZenmoFeiShi/Didichuxing.snippet https://github.com/ZenmoFeiShi/Qx/raw/main/Didichuxing.snippet
        curl -L -o Original/RuCu6/Amap.snippet https://github.com/RuCu6/QuanX/raw/main/Rewrites/Cube/amap.snippet
        curl -L -o Original/RuCu6/Bilibili.snippet https://github.com/RuCu6/QuanX/raw/main/Rewrites/Cube/bilibili.snippet

    - name: Prepare Replacement Variables
      id: prepare-replacement
      run: |
        # 提取 hostname 并生成注释
        AMAP_HOSTNAMES=$(grep -oP '(?<=hostname = ).*' Original/RuCu6/Amap.snippet)
        AMAP_COMMENT="# 高德地图 // $AMAP_HOSTNAMES"
        echo "AMAP_COMMENT=$AMAP_COMMENT" >> $GITHUB_ENV

        BILIBILI_HOSTNAMES=$(grep -oP '(?<=hostname = ).*' Original/RuCu6/Bilibili.snippet)
        BILIBILI_COMMENT="# 哔哩哔哩 // $BILIBILI_HOSTNAMES"
        echo "BILIBILI_COMMENT=$BILIBILI_COMMENT" >> $GITHUB_ENV

        PDD_HOSTNAMES=$(grep -oP '(?<=hostname = ).*' Original/ZenmoFeiShi/Pinduoduo.snippet)
        PDD_COMMENT="# 拼多多 // $PDD_HOSTNAMES"
        echo "PDD_COMMENT=$PDD_COMMENT" >> $GITHUB_ENV

        SMZDM_HOSTNAMES=$(grep -oP '(?<=hostname = ).*' Original/ddgksf2013/SmzdmAds.conf)
        SMZDM_COMMENT="# 什么值得买 // $SMZDM_HOSTNAMES"
        echo "SMZDM_COMMENT=$SMZDM_COMMENT" >> $GITHUB_ENV

        DIDI_HOSTNAMES=$(grep -oP '(?<=hostname = ).*' Original/ZenmoFeiShi/Didichuxing.snippet)
        DIDI_COMMENT="# 滴滴出行 // $DIDI_HOSTNAMES"
        echo "DIDI_COMMENT=$DIDI_COMMENT" >> $GITHUB_ENV

    - name: Convert snippets
      run: |
        mkdir -p Modules/Surge Modules/Loon
        bash Convert-Modules.sh "Original/RuCu6/Amap.snippet" "Amap" "$AMAP_COMMENT"
        bash Convert-Modules.sh "Original/RuCu6/Bilibili.snippet" "Bilibili" "$BILIBILI_COMMENT"
        bash Convert-Modules.sh "Original/ZenmoFeiShi/Didichuxing.snippet" "Didichuxing" "$DIDI_COMMENT"
        bash Convert-Modules.sh "Original/ZenmoFeiShi/Pinduoduo.snippet" "Pinduoduo" "$PDD_COMMENT"
        bash Convert-Modules.sh "Original/ddgksf2013/SmzdmAds.conf" "SmzdmAds" "$SMZDM_COMMENT"

    - name: Create README in Modules directory
      run: |
        echo "# Modules for Surge and Loon" > Modules/README.md
        echo "" >> Modules/README.md
        echo "This repository contains Surge and Loon configurations." >> Modules/README.md
        echo "" >> Modules/README.md
        echo "## Source" >> Modules/README.md
        echo "" >> Modules/README.md
        
        echo "Amap snippet is sourced from:" >> Modules/README.md
        echo "[RuCu6/QuanX](https://github.com/RuCu6/QuanX/raw/main/Rewrites/Cube/amap.snippet)" >> Modules/README.md
        echo "" >> Modules/README.md
        
        echo "Bilibili snippet is sourced from:" >> Modules/README.md
        echo "[RuCu6/QuanX](https://github.com/RuCu6/QuanX/raw/main/Rewrites/Cube/bilibili.snippet)" >> Modules/README.md
        echo "" >> Modules/README.md
        
        echo "Didichuxing snippet is sourced from:" >> Modules/README.md
        echo "[ZenmoFeiShi/Qx](https://github.com/ZenmoFeiShi/Qx/raw/main/Didichuxing.snippet)" >> Modules/README.md
        echo "" >> Modules/README.md
        
        echo "Pinduoduo snippet is sourced from:" >> Modules/README.md
        echo "[ZenmoFeiShi/Qx](https://github.com/ZenmoFeiShi/Qx/raw/main/Pinduoduo.snippet)" >> Modules/README.md
        echo "" >> Modules/README.md
        
        echo "SmzdmAds snippet is sourced from:" >> Modules/README.md
        echo "[ddgksf2013/Rewrite](https://github.com/ddgksf2013/Rewrite/raw/master/AdBlock/SmzdmAds.conf)" >> Modules/README.md

    - name: Check if files are updated
      id: check-update
      run: |
        git config --local user.name "ifflagged"
        git config --local user.email "qibo.sign@outlook.com"
        git add .
        if git diff --cached --quiet; then
          echo "NO_CHANGES=true" >> $GITHUB_ENV
        else
          git commit -m 'Update Surge and Loon modules'
          git push
          echo "NO_CHANGES=false" >> $GITHUB_ENV
        fi

    - name: Send TG notification
      if: env.NO_CHANGES == 'false'
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TG_ID }}
        token: ${{ secrets.TG_BOT_TOKEN }}
        message: 'Surge and Loon modules have been updated.'
