name: Download and Merge Modules

on:
  schedule:
    - cron: '0 0 * * *' # 每天执行一次
  workflow_dispatch: # 手动触发

jobs:
  download_and_merge:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install requests
        run: pip install requests

      - name: Run Merge Script for Surge
        run: |
          python Modules-Merge.py Modules-Tools.txt

      - name: List generated files
        run: |
          echo "Generated files in Modules/Surge:"
          ls -la Modules/Surge/
          echo "Generated files in Modules/Loon:"
          ls -la Modules/Loon/

      - name: Check updated files
        id: check_updates
        run: |
          # 检查是否存在上一个提交
          if git rev-parse --verify HEAD^1 >/dev/null 2>&1; then
            UPDATED_FILES=$(git diff --name-only HEAD^1 HEAD Modules/)
          else
            UPDATED_FILES=$(git diff --name-only HEAD Modules/)
          fi
          echo "Updated files: $UPDATED_FILES"
          echo "::set-output name=updated_files::$UPDATED_FILES"

      - name: Check git status
        run: |
          git status
          git diff

      - name: Commit and push changes
        run: |
          git config --local user.name "ifflagged"
          git config --local user.email "qibo.sign@outlook.com"
          git add Modules/Surge/*
          git add Modules/Loon/*
          git commit -m "Update merged modules" || echo "No changes to commit"
          git push

      - name: Send TG Notification
        run: |
          UPDATED_FILES="${{ steps.check_updates.outputs.updated_files }}"
          if [ -n "$UPDATED_FILES" ]; then
            MESSAGE="The following files have been updated:\n"
            GITHUB_URL="https://github.com/ifflagged/BaDaBaBaBa/blob/main/"
            while read -r file; do
              # 去掉 'Modules/' 前缀
              display_name=$(echo "$file" | sed 's/Modules\///')
              # 生成完整链接
              file_url="${GITHUB_URL}${file}"
              # 生成 markdown 格式的超链接
              MESSAGE="${MESSAGE}[${display_name}](${file_url})\n"
            done <<< "$UPDATED_FILES"

            # 使用 echo -e 处理换行符并发送通知
            curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage \
              -d chat_id=${{ secrets.TG_ID }} \
              -d text="$(echo -e "$MESSAGE")" \
              -d parse_mode=Markdown
          else
            echo "No files were updated, no notification sent."
          fi
