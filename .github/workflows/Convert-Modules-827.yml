name: Convert Modules 827

on:
  schedule:
    - cron: '0 0 * * *' # 每天执行一次
  workflow_dispatch: # 手动触发

jobs:
  update-snippet:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Download and process snippets
      run: |
        mkdir -p Original Modules/Surge Modules/Loon

        # Read links from Modules-Links.txt and process each
        while IFS= read -r link; do
          # Extract filename from the URL
          filename=$(basename "$link")
          # Determine the module name based on the filename
          module_name=$(echo "${filename%%.*}" | sed 's/\(.*\)/\L\1/')

          # Download the file
          curl -L -o "Original/${filename}" "$link"

          # Generate a comment based on the filename
          comment="# ${filename} // $(basename "$link")"

          # Run the conversion script
          bash Convert-Modules-827.sh "Original/${filename}" "${module_name}" "$comment"
        done < Modules-Links.txt

    - name: Create README in Modules directory
      run: |
        echo "# Modules for Surge and Loon" > Modules/README.md
        echo "" >> Modules/README.md
        echo "This directory contains converted modules from various sources, compatible with Surge and Loon." >> Modules/README.md
        echo "" >> Modules/README.md
        echo "## Sources" >> Modules/README.md
        echo "" >> Modules/README.md
        
        # Create links based on the files processed
        while IFS= read -r link; do
          filename=$(basename "$link")
          module_name=$(echo "${filename%%.*}" | sed 's/\(.*\)/\L\1/')
          echo "- **${module_name}**: Converted from [${filename}](${link})" >> Modules/README.md
        done < Modules-Links.txt

    - name: Commit and Push changes
      run: |
        git config --local user.name "ifflagged"
        git config --local user.email "qibo.sign@outlook.com"
        git add .
        if git diff --cached --quiet; then
          echo "No changes detected"
        else
          git commit -m "Update Modules"
          git push
        fi

    - name: Send TG Notification
      run: |
        # Check if there is a previous commit
        if git rev-parse --verify HEAD^1 >/dev/null 2>&1; then
          UPDATED_FILES=$(git diff --name-only HEAD^1 HEAD Modules/)
        else
          UPDATED_FILES=$(git diff --name-only HEAD Modules/)
        fi
        
        if [ -n "$UPDATED_FILES" ]; then
          MESSAGE="The following files have been updated:\n$UPDATED_FILES"
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TG_BOT_TOKEN }}/sendMessage -d chat_id=${{ secrets.TG_ID }} -d text="$MESSAGE"
        else
          echo "No files were updated, no notification sent."
        fi
